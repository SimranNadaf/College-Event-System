{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91942\\\\Desktop\\\\College Event Management System\\\\fest-app\\\\src\\\\component\\\\Sidebar.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: \"100px\",\n          position: \"fixed\",\n          width: \"20%\",\n          height: \"100%\",\n          backgroundColor: \"#3C84AB\",\n          top: \"0\",\n          left: \"0\",\n          zIndex: \"0\",\n          color: \"#ffffff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          type: \"none\",\n          style: {\n            padding: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: \"20px\",\n              gap: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa-solid fa-user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 57\n              }, this), \"My Profile\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa-solid fa-trophy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 45\n              }, this), \"Events\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa-solid fa-right-from-bracket\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 45\n              }, this), \"Log out\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"100px\",\n        paddingLeft: \"25%\",\n        height: \"100%\",\n        backgroundColor: \"gray\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          backgroundColor: \"gray\"\n        },\n        children: \"Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top.Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top. Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top. Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top. Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top. Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top. Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top. Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top. Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top. Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top. Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top. Definition and Usage The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order. Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) and flex items (elements that are direct children of display:flex elements). Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","Sidebar","paddingTop","position","width","height","backgroundColor","top","left","zIndex","color","textAlign","padding","gap","paddingLeft"],"sources":["C:/Users/91942/Desktop/College Event Management System/fest-app/src/component/Sidebar.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <>\r\n      <div>\r\n        <div\r\n          style={{\r\n            paddingTop: \"100px\",\r\n            position: \"fixed\",\r\n            width: \"20%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"#3C84AB\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            zIndex: \"0\",\r\n            color:\"#ffffff\",\r\n            \r\n            \r\n          }}\r\n        >\r\n          <h3 style={{textAlign:\"center\"}}>Menu</h3>\r\n          <ul type=\"none\" style={{padding:\"20px\"}}>\r\n            <li style={{padding:\"20px\",gap:\"10px\"}}><a ><i class=\"fa-solid fa-user\"></i>My Profile</a></li>\r\n            \r\n            <li style={{padding:\"20px\"}}><a><i class=\"fa-solid fa-trophy\"></i>Events</a></li>\r\n            <li style={{padding:\"20px\"}}><a><i class=\"fa-solid fa-right-from-bracket\"></i>Log out</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          paddingTop: \"100px\",\r\n          paddingLeft: \"25%\",\r\n          height: \"100%\",\r\n          backgroundColor: \"gray\",\r\n        }}\r\n      >\r\n        <p style={{ backgroundColor: \"gray\" }}>\r\n          Definition and Usage The z-index property specifies the stack order of\r\n          an element. An element with greater stack order is always in front of\r\n          an element with a lower stack order. Note: z-index only works on\r\n          positioned elements (position: absolute, position: relative, position:\r\n          fixed, or position: sticky) and flex items (elements that are direct\r\n          children of display:flex elements). Note: If two positioned elements\r\n          overlap without a z-index specified, the element positioned last in\r\n          the HTML code will be shown on top.Definition and Usage The z-index\r\n          property specifies the stack order of an element. An element with\r\n          greater stack order is always in front of an element with a lower\r\n          stack order. Note: z-index only works on positioned elements\r\n          (position: absolute, position: relative, position: fixed, or position:\r\n          sticky) and flex items (elements that are direct children of\r\n          display:flex elements). Note: If two positioned elements overlap\r\n          without a z-index specified, the element positioned last in the HTML\r\n          code will be shown on top. Definition and Usage The z-index property\r\n          specifies the stack order of an element. An element with greater stack\r\n          order is always in front of an element with a lower stack order. Note:\r\n          z-index only works on positioned elements (position: absolute,\r\n          position: relative, position: fixed, or position: sticky) and flex\r\n          items (elements that are direct children of display:flex elements).\r\n          Note: If two positioned elements overlap without a z-index specified,\r\n          the element positioned last in the HTML code will be shown on top.\r\n          Definition and Usage The z-index property specifies the stack order of\r\n          an element. An element with greater stack order is always in front of\r\n          an element with a lower stack order. Note: z-index only works on\r\n          positioned elements (position: absolute, position: relative, position:\r\n          fixed, or position: sticky) and flex items (elements that are direct\r\n          children of display:flex elements). Note: If two positioned elements\r\n          overlap without a z-index specified, the element positioned last in\r\n          the HTML code will be shown on top. Definition and Usage The z-index\r\n          property specifies the stack order of an element. An element with\r\n          greater stack order is always in front of an element with a lower\r\n          stack order. Note: z-index only works on positioned elements\r\n          (position: absolute, position: relative, position: fixed, or position:\r\n          sticky) and flex items (elements that are direct children of\r\n          display:flex elements). Note: If two positioned elements overlap\r\n          without a z-index specified, the element positioned last in the HTML\r\n          code will be shown on top. Definition and Usage The z-index property\r\n          specifies the stack order of an element. An element with greater stack\r\n          order is always in front of an element with a lower stack order. Note:\r\n          z-index only works on positioned elements (position: absolute,\r\n          position: relative, position: fixed, or position: sticky) and flex\r\n          items (elements that are direct children of display:flex elements).\r\n          Note: If two positioned elements overlap without a z-index specified,\r\n          the element positioned last in the HTML code will be shown on top.\r\n          Definition and Usage The z-index property specifies the stack order of\r\n          an element. An element with greater stack order is always in front of\r\n          an element with a lower stack order. Note: z-index only works on\r\n          positioned elements (position: absolute, position: relative, position:\r\n          fixed, or position: sticky) and flex items (elements that are direct\r\n          children of display:flex elements). Note: If two positioned elements\r\n          overlap without a z-index specified, the element positioned last in\r\n          the HTML code will be shown on top. Definition and Usage The z-index\r\n          property specifies the stack order of an element. An element with\r\n          greater stack order is always in front of an element with a lower\r\n          stack order. Note: z-index only works on positioned elements\r\n          (position: absolute, position: relative, position: fixed, or position:\r\n          sticky) and flex items (elements that are direct children of\r\n          display:flex elements). Note: If two positioned elements overlap\r\n          without a z-index specified, the element positioned last in the HTML\r\n          code will be shown on top. Definition and Usage The z-index property\r\n          specifies the stack order of an element. An element with greater stack\r\n          order is always in front of an element with a lower stack order. Note:\r\n          z-index only works on positioned elements (position: absolute,\r\n          position: relative, position: fixed, or position: sticky) and flex\r\n          items (elements that are direct children of display:flex elements).\r\n          Note: If two positioned elements overlap without a z-index specified,\r\n          the element positioned last in the HTML code will be shown on top.\r\n          Definition and Usage The z-index property specifies the stack order of\r\n          an element. An element with greater stack order is always in front of\r\n          an element with a lower stack order. Note: z-index only works on\r\n          positioned elements (position: absolute, position: relative, position:\r\n          fixed, or position: sticky) and flex items (elements that are direct\r\n          children of display:flex elements). Note: If two positioned elements\r\n          overlap without a z-index specified, the element positioned last in\r\n          the HTML code will be shown on top. Definition and Usage The z-index\r\n          property specifies the stack order of an element. An element with\r\n          greater stack order is always in front of an element with a lower\r\n          stack order. Note: z-index only works on positioned elements\r\n          (position: absolute, position: relative, position: fixed, or position:\r\n          sticky) and flex items (elements that are direct children of\r\n          display:flex elements). Note: If two positioned elements overlap\r\n          without a z-index specified, the element positioned last in the HTML\r\n          code will be shown on top. Definition and Usage The z-index property\r\n          specifies the stack order of an element. An element with greater stack\r\n          order is always in front of an element with a lower stack order. Note:\r\n          z-index only works on positioned elements (position: absolute,\r\n          position: relative, position: fixed, or position: sticky) and flex\r\n          items (elements that are direct children of display:flex elements).\r\n          Note: If two positioned elements overlap without a z-index specified,\r\n          the element positioned last in the HTML code will be shown on top.\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,OAAT,GAAmB;EACjB,oBACE;IAAA,wBACE;MAAA,uBACE;QACE,KAAK,EAAE;UACLC,UAAU,EAAE,OADP;UAELC,QAAQ,EAAE,OAFL;UAGLC,KAAK,EAAE,KAHF;UAILC,MAAM,EAAE,MAJH;UAKLC,eAAe,EAAE,SALZ;UAMLC,GAAG,EAAE,GANA;UAOLC,IAAI,EAAE,GAPD;UAQLC,MAAM,EAAE,GARH;UASLC,KAAK,EAAC;QATD,CADT;QAAA,wBAeE;UAAI,KAAK,EAAE;YAACC,SAAS,EAAC;UAAX,CAAX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAfF,eAgBE;UAAI,IAAI,EAAC,MAAT;UAAgB,KAAK,EAAE;YAACC,OAAO,EAAC;UAAT,CAAvB;UAAA,wBACE;YAAI,KAAK,EAAE;cAACA,OAAO,EAAC,MAAT;cAAgBC,GAAG,EAAC;YAApB,CAAX;YAAA,uBAAwC;cAAA,wBAAI;gBAAG,KAAK,EAAC;cAAT;gBAAA;gBAAA;gBAAA;cAAA,QAAJ;YAAA;cAAA;cAAA;cAAA;YAAA;UAAxC;YAAA;YAAA;YAAA;UAAA,QADF,eAGE;YAAI,KAAK,EAAE;cAACD,OAAO,EAAC;YAAT,CAAX;YAAA,uBAA6B;cAAA,wBAAG;gBAAG,KAAK,EAAC;cAAT;gBAAA;gBAAA;gBAAA;cAAA,QAAH;YAAA;cAAA;cAAA;cAAA;YAAA;UAA7B;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAI,KAAK,EAAE;cAACA,OAAO,EAAC;YAAT,CAAX;YAAA,uBAA6B;cAAA,wBAAG;gBAAG,KAAK,EAAC;cAAT;gBAAA;gBAAA;gBAAA;cAAA,QAAH;YAAA;cAAA;cAAA;cAAA;YAAA;UAA7B;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA,QAhBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eA0BE;MACE,KAAK,EAAE;QACLV,UAAU,EAAE,OADP;QAELY,WAAW,EAAE,KAFR;QAGLT,MAAM,EAAE,MAHH;QAILC,eAAe,EAAE;MAJZ,CADT;MAAA,uBAQE;QAAG,KAAK,EAAE;UAAEA,eAAe,EAAE;QAAnB,CAAV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IARF;MAAA;MAAA;MAAA;IAAA,QA1BF;EAAA,gBADF;AAoID;;KArIQL,O;AAuIT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}