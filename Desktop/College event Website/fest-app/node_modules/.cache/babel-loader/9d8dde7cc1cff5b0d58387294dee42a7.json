{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91942\\\\Desktop\\\\College Event Management System\\\\fest-app\\\\src\\\\component\\\\StudentMyEvent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport EventItemStudent from \"./EventItemStudent\";\n// import EventItemOrg from \"./EventItemOrg\";\nimport StudentSidebar from \"./StudentSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StudentMyEvent() {\n  _s();\n  const host = \"http://localhost:5000\";\n  // let eventId = [{ date: \"\", event: \"\", org: \"\", student: \"\"}];\n  let [eventIds, setEventIds] = useState([]);\n  let event = [{}];\n  let [events, setEvents] = useState(event);\n  useEffect(() => {\n    // API call\n    const Profile = async () => {\n      const response = await fetch(`${host}/api/Studentevent/getRegisteredEventsId`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem(\"Studenttoken\")\n        }\n      });\n      const result = await response.json();\n      setEventIds(result);\n      console.log(eventIds);\n    };\n    Profile();\n\n    // if (eventIds.length != 1) {\n    //   eventIds.list.map((key, event) => {\n    //     getEvents(event);\n    //     console.log(\"1\");\n    //   });\n    // }\n  }, []);\n  useEffect(() => {\n    const getEvents = async event => {\n      console.log(\"get event...\");\n      const response = await fetch(`${host}/api/Studentevent/getEvent`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem(\"Studenttoken\")\n        },\n        body: JSON.stringify({\n          eventId: Object(event.event)\n        })\n      });\n      const result = await response.json();\n      setEvents(events.concat(result));\n      // console.log(result);\n      console.log(events);\n    };\n    eventIds && eventIds.map((event, index) => {\n      getEvents(event);\n    });\n  }, [eventIds.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StudentSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"100px\",\n        paddingLeft: \"30%\",\n        height: \"100%\"\n      },\n      children: [eventIds.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-center mt-3\",\n        style: {\n          width: \"100%\",\n          height: \"300px\",\n          backgroundColor: \"#BFEAF5\",\n          justifyContent: \"center\",\n          marginRight: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\\"No Events for Display\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), events && events.map((event, index) => {\n        return /*#__PURE__*/_jsxDEV(EventItemStudent, {\n          event: event\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(StudentMyEvent, \"4IdwVcaNmsZM1JlEtehLP5VBaaQ=\");\n_c = StudentMyEvent;\nexport default StudentMyEvent;\nvar _c;\n$RefreshReg$(_c, \"StudentMyEvent\");","map":{"version":3,"names":["React","useEffect","useState","EventItemStudent","StudentSidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentMyEvent","_s","host","eventIds","setEventIds","event","events","setEvents","Profile","response","fetch","method","headers","localStorage","getItem","result","json","console","log","getEvents","body","JSON","stringify","eventId","Object","concat","map","index","length","children","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingTop","paddingLeft","height","className","width","backgroundColor","justifyContent","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/91942/Desktop/College Event Management System/fest-app/src/component/StudentMyEvent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport EventItemStudent from \"./EventItemStudent\";\r\n// import EventItemOrg from \"./EventItemOrg\";\r\nimport StudentSidebar from \"./StudentSidebar\";\r\n\r\nfunction StudentMyEvent() {\r\n  const host = \"http://localhost:5000\";\r\n  // let eventId = [{ date: \"\", event: \"\", org: \"\", student: \"\"}];\r\n  let [eventIds, setEventIds] = useState([]);\r\n\r\n  let event = [{}];\r\n\r\n  let [events, setEvents] = useState(event);\r\n\r\n  useEffect(() => {\r\n    // API call\r\n    const Profile = async () => {\r\n      const response = await fetch(\r\n        `${host}/api/Studentevent/getRegisteredEventsId`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"auth-token\": localStorage.getItem(\"Studenttoken\"),\r\n          },\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      setEventIds(result);\r\n      console.log(eventIds);\r\n    };\r\n    Profile();\r\n\r\n    // if (eventIds.length != 1) {\r\n    //   eventIds.list.map((key, event) => {\r\n    //     getEvents(event);\r\n    //     console.log(\"1\");\r\n    //   });\r\n    // }\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n   \r\n    const getEvents = async (event) => {\r\n      console.log(\"get event...\")\r\n      const response = await fetch(`${host}/api/Studentevent/getEvent`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\": localStorage.getItem(\"Studenttoken\"),\r\n        },\r\n        body: JSON.stringify({ eventId: Object(event.event) }),\r\n      });\r\n      const result = await response.json();\r\n      setEvents(events.concat(result));\r\n      // console.log(result);\r\n      console.log(events);\r\n    };\r\n  \r\n  \r\n    eventIds && eventIds.map((event, index)=>{\r\n      getEvents(event)\r\n    })\r\n\r\n  },[eventIds.length])\r\n\r\n  return (\r\n    <>\r\n      <StudentSidebar />\r\n      <div\r\n        style={{\r\n          paddingTop: \"100px\",\r\n          paddingLeft: \"30%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {eventIds.length === 0 && (\r\n          <div\r\n            className=\"container text-center mt-3\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"300px\",\r\n              backgroundColor: \"#BFEAF5\",\r\n              justifyContent: \"center\",\r\n              marginRight: \"5%\",\r\n            }}\r\n          >\r\n            <h1>\"No Events for Display\"</h1>\r\n          </div>\r\n        )}\r\n        \r\n{/* { eventIds &&  eventIds.list.map((event, index) => {\r\n        return getEvents(event);\r\n})} */}\r\n  \r\n        {events && events.map((event, index) => {\r\n          return <EventItemStudent key={index} event={event} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudentMyEvent;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}